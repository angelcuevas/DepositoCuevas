<UserControl x:Class="DepositoCuevas.views.Juegos.JuegosList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DepositoCuevas.views.Juegos"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             FontSize="30"
             FontStyle="Italic"
             
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:menu="clr-namespace:DepositoCuevas.views.menu"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <!--DialogClosing="Sample1_DialogHost_OnDialogClosing"-->
    <!--<materialDesign:DialogHost
                    
                    DialogTheme="Inherit">
        <materialDesign:DialogHost.DialogContent>-->
            <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Button Grid.Row="0"
              Style="{StaticResource MaterialDesignRaisedLightButton}"
              Width="300"
              ToolTip="Resource name: MaterialDesignRaisedLightButton"
              Content="Crear Juego Nuevo"
                
              IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" 
              HorizontalAlignment="left" Cursor="Hand"
                Margin="0 20 0 40" Click="Button_Click"
                
                />
        <StackPanel Grid.Row="1"
          VerticalAlignment="Center">
            <Button
            Command="{Binding RunDialogCommand}"
            Width="128"
            Content="RUN CODE" />
            <Button
            Command="{Binding RunExtendedDialogCommand}"
            Width="128"
            Margin="0 32 0 0"
            Content="EXTENDED" />
        </StackPanel>
        <DataGrid
                Grid.Row="2"
                ItemsSource="{Binding Lista}"
                CanUserAddRows="False" AutoGenerateColumns="False"
                HeadersVisibility="All"
            FontSize="24"
            IsReadOnly="true"
                
            >
            <DataGrid.Resources>

            </DataGrid.Resources>

            <DataGrid.Columns>
                <!--<DataGridCheckBoxColumn
                        Binding="{Binding IsSelected, UpdateSourceTrigger=PropertyChanged}" 
                        ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                    <DataGridCheckBoxColumn.Header>
                        <Border Background="Transparent">
                            --><!--<CheckBox
                                    IsChecked="{Binding Data.IsAllItems1Selected, Source={StaticResource DataContextProxy}}"/>--><!--
                        </Border>
                    </DataGridCheckBoxColumn.Header>

                    <DataGridCheckBoxColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                        </Style>
                    </DataGridCheckBoxColumn.HeaderStyle>
                </DataGridCheckBoxColumn>-->

                <DataGridTextColumn
                        Binding="{Binding Path=JuegoDTO.Codigo}"
                        Header="Código"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                    />
                        <!--EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"-->
                        

                <!-- if you want to use the pop up style (MaterialDesignDataGridTextColumnPopupEditingStyle), you must use MaterialDataGridTextColumn -->
                <materialDesign:DataGridTextColumn
                        Header="Descripción"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                    <materialDesign:DataGridTextColumn.Binding>
                        <Binding Path="JuegoDTO.Descripcion">
                            <Binding.ValidationRules>
                                <!--<domain:NotEmptyValidationRule/>-->
                            </Binding.ValidationRules>
                        </Binding>
                    </materialDesign:DataGridTextColumn.Binding>
                </materialDesign:DataGridTextColumn>

                <!-- set a max length to get an indicator in the editor -->
                <DataGridTextColumn
                        Header="Cantidad"
                        ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                    <DataGridTextColumn.Binding>
                        <Binding Path="JuegoDTO.Cantidad">
                            <Binding.ValidationRules>
                                <!--<domain:NotEmptyValidationRule />-->
                            </Binding.ValidationRules>
                        </Binding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>

                <DataGridTemplateColumn
                        Header="Detalles"

                    >

                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Button
                                Style="{StaticResource MaterialDesignRaisedSecondaryLightButton}"
                                Width="auto"
                                ToolTip="Resource name: MaterialDesignRaisedSecondaryLightButton"
                                Content="Ver"
                                IsEnabled="{Binding DataContext.ControlsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=Window}}" Cursor="Hand"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
   
                </DataGridTemplateColumn>



                <!--<materialDesign:DataGridTextColumn
                        Binding="{Binding Numeric}"
                        Header="Number with long header"
                        Width="120"
                        EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnPopupEditingStyle}">
                    <DataGridTextColumn.HeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                            <Setter Property="HorizontalContentAlignment" Value="Right" />
                            <Setter Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock
                                                TextWrapping="Wrap"
                                                Text="{Binding}"
                                                TextAlignment="Right"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </DataGridTextColumn.HeaderStyle>

                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </materialDesign:DataGridTextColumn>

                --><!-- use custom combo box column to get better combos. Use ItemsSourceBinding as your binding template to be applied to each combo --><!--
                <materialDesign:DataGridComboBoxColumn
                        Header="Food with long header" IsEditable="True"
                        Width="100"
                        SelectedValueBinding="{Binding Food}"
                        ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.Foods}">
                    --><!--Setting the editing element style allows access to all of the combo box's properties
                        <materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type ComboBox}, ResourceId=MaterialDataGridComboBoxColumnEditingStyle}}" >
                                <Setter Property="IsEditable" Value="True" />
                            </Style>
                        </materialDesign:MaterialDataGridComboBoxColumn.EditingElementStyle>
                        --><!--
                </materialDesign:DataGridComboBoxColumn>-->
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
            <!--</materialDesign:DialogHost.DialogContent>
        </materialDesign:DialogHost>-->
</UserControl>
